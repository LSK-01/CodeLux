{
  "version": 3,
  "sources": ["../../svelte/store/index.mjs"],
  "sourcesContent": ["import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\r\nexport { get_store_value as get } from '../internal/index.mjs';\r\n\r\nconst subscriber_queue = [];\r\n/**\r\n * Creates a `Readable` store that allows reading by subscription.\r\n * @param value initial value\r\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\r\n */\r\nfunction readable(value, start) {\r\n    return {\r\n        subscribe: writable(value, start).subscribe\r\n    };\r\n}\r\n/**\r\n * Create a `Writable` store that allows both updating and reading by subscription.\r\n * @param {*=}value initial value\r\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\r\n */\r\nfunction writable(value, start = noop) {\r\n    let stop;\r\n    const subscribers = new Set();\r\n    function set(new_value) {\r\n        if (safe_not_equal(value, new_value)) {\r\n            value = new_value;\r\n            if (stop) { // store is ready\r\n                const run_queue = !subscriber_queue.length;\r\n                for (const subscriber of subscribers) {\r\n                    subscriber[1]();\r\n                    subscriber_queue.push(subscriber, value);\r\n                }\r\n                if (run_queue) {\r\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\r\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\r\n                    }\r\n                    subscriber_queue.length = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function update(fn) {\r\n        set(fn(value));\r\n    }\r\n    function subscribe(run, invalidate = noop) {\r\n        const subscriber = [run, invalidate];\r\n        subscribers.add(subscriber);\r\n        if (subscribers.size === 1) {\r\n            stop = start(set) || noop;\r\n        }\r\n        run(value);\r\n        return () => {\r\n            subscribers.delete(subscriber);\r\n            if (subscribers.size === 0) {\r\n                stop();\r\n                stop = null;\r\n            }\r\n        };\r\n    }\r\n    return { set, update, subscribe };\r\n}\r\nfunction derived(stores, fn, initial_value) {\r\n    const single = !Array.isArray(stores);\r\n    const stores_array = single\r\n        ? [stores]\r\n        : stores;\r\n    const auto = fn.length < 2;\r\n    return readable(initial_value, (set) => {\r\n        let inited = false;\r\n        const values = [];\r\n        let pending = 0;\r\n        let cleanup = noop;\r\n        const sync = () => {\r\n            if (pending) {\r\n                return;\r\n            }\r\n            cleanup();\r\n            const result = fn(single ? values[0] : values, set);\r\n            if (auto) {\r\n                set(result);\r\n            }\r\n            else {\r\n                cleanup = is_function(result) ? result : noop;\r\n            }\r\n        };\r\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\r\n            values[i] = value;\r\n            pending &= ~(1 << i);\r\n            if (inited) {\r\n                sync();\r\n            }\r\n        }, () => {\r\n            pending |= (1 << i);\r\n        }));\r\n        inited = true;\r\n        sync();\r\n        return function stop() {\r\n            run_all(unsubscribers);\r\n            cleanup();\r\n        };\r\n    });\r\n}\r\n\r\nexport { derived, readable, writable };\r\n"],
  "mappings": ";;;;;;;;;AAGA,IAAM,mBAAmB,CAAC;AAM1B,SAAS,SAAS,OAAO,OAAO;AAC5B,SAAO;AAAA,IACH,WAAW,SAAS,OAAO,KAAK,EAAE;AAAA,EACtC;AACJ;AAMA,SAAS,SAAS,OAAO,QAAQ,MAAM;AACnC,MAAI;AACJ,QAAM,cAAc,oBAAI,IAAI;AAC5B,WAAS,IAAI,WAAW;AACpB,QAAI,eAAe,OAAO,SAAS,GAAG;AAClC,cAAQ;AACR,UAAI,MAAM;AACN,cAAM,YAAY,CAAC,iBAAiB;AACpC,mBAAW,cAAc,aAAa;AAClC,qBAAW,CAAC,EAAE;AACd,2BAAiB,KAAK,YAAY,KAAK;AAAA,QAC3C;AACA,YAAI,WAAW;AACX,mBAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK,GAAG;AACjD,6BAAiB,CAAC,EAAE,CAAC,EAAE,iBAAiB,IAAI,CAAC,CAAC;AAAA,UAClD;AACA,2BAAiB,SAAS;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,OAAO,IAAI;AAChB,QAAI,GAAG,KAAK,CAAC;AAAA,EACjB;AACA,WAASA,WAAU,KAAK,aAAa,MAAM;AACvC,UAAM,aAAa,CAAC,KAAK,UAAU;AACnC,gBAAY,IAAI,UAAU;AAC1B,QAAI,YAAY,SAAS,GAAG;AACxB,aAAO,MAAM,GAAG,KAAK;AAAA,IACzB;AACA,QAAI,KAAK;AACT,WAAO,MAAM;AACT,kBAAY,OAAO,UAAU;AAC7B,UAAI,YAAY,SAAS,GAAG;AACxB,aAAK;AACL,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACA,SAAO,EAAE,KAAK,QAAQ,WAAAA,WAAU;AACpC;AACA,SAAS,QAAQ,QAAQ,IAAI,eAAe;AACxC,QAAM,SAAS,CAAC,MAAM,QAAQ,MAAM;AACpC,QAAM,eAAe,SACf,CAAC,MAAM,IACP;AACN,QAAM,OAAO,GAAG,SAAS;AACzB,SAAO,SAAS,eAAe,CAAC,QAAQ;AACpC,QAAI,SAAS;AACb,UAAM,SAAS,CAAC;AAChB,QAAI,UAAU;AACd,QAAI,UAAU;AACd,UAAM,OAAO,MAAM;AACf,UAAI,SAAS;AACT;AAAA,MACJ;AACA,cAAQ;AACR,YAAM,SAAS,GAAG,SAAS,OAAO,CAAC,IAAI,QAAQ,GAAG;AAClD,UAAI,MAAM;AACN,YAAI,MAAM;AAAA,MACd,OACK;AACD,kBAAU,YAAY,MAAM,IAAI,SAAS;AAAA,MAC7C;AAAA,IACJ;AACA,UAAM,gBAAgB,aAAa,IAAI,CAAC,OAAO,MAAM,UAAU,OAAO,CAAC,UAAU;AAC7E,aAAO,CAAC,IAAI;AACZ,iBAAW,EAAE,KAAK;AAClB,UAAI,QAAQ;AACR,aAAK;AAAA,MACT;AAAA,IACJ,GAAG,MAAM;AACL,iBAAY,KAAK;AAAA,IACrB,CAAC,CAAC;AACF,aAAS;AACT,SAAK;AACL,WAAO,SAAS,OAAO;AACnB,cAAQ,aAAa;AACrB,cAAQ;AAAA,IACZ;AAAA,EACJ,CAAC;AACL;",
  "names": ["subscribe"]
}
